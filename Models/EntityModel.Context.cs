//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Politico.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class PoliticoEntities : DbContext
    {
        public PoliticoEntities()
            : base("name=PoliticoEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Party> Parties { get; set; }
        public DbSet<State> States { get; set; }
        public DbSet<Constituency> Constituencies { get; set; }
        public DbSet<MP> MPs { get; set; }
        public DbSet<Answer> Answers { get; set; }
        public DbSet<Comment> Comments { get; set; }
        public DbSet<Member> Members { get; set; }
        public DbSet<Question> Questions { get; set; }
        public DbSet<Result> Results { get; set; }
        public DbSet<Sector> Sectors { get; set; }
    
        public virtual ObjectResult<FindComment_Result> FindComment(Nullable<long> mPID)
        {
            var mPIDParameter = mPID.HasValue ?
                new ObjectParameter("MPID", mPID) :
                new ObjectParameter("MPID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FindComment_Result>("FindComment", mPIDParameter);
        }
    
        public virtual ObjectResult<FindMPOfConstituency_Result> FindMPOfConstituency(Nullable<long> constituencyID)
        {
            var constituencyIDParameter = constituencyID.HasValue ?
                new ObjectParameter("constituencyID", constituencyID) :
                new ObjectParameter("constituencyID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FindMPOfConstituency_Result>("FindMPOfConstituency", constituencyIDParameter);
        }
    }
}
